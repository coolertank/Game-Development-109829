% Player Paddle Code :

using UnityEngine;

public class PlayerPaddle : Paddle
{
    public Vector2 direction { get; private set; }

    private void Update()
    {
        if (Input.GetKey(KeyCode.W) || Input.GetKey(KeyCode.UpArrow)) {
            direction = Vector2.up;
        } else if (Input.GetKey(KeyCode.S) || Input.GetKey(KeyCode.DownArrow)) {
            direction = Vector2.down;
        } else {
            direction = Vector2.zero;
        }
    }

    private void FixedUpdate()
    {
        if (direction.sqrMagnitude != 0) {
            rigidbody.AddForce(direction * speed);
        }
    }

}

% Comupter Paddle Code

using UnityEngine;

public class ComputerPaddle : Paddle
{
    public Rigidbody2D ball;

    private void FixedUpdate()
    {
        
        if (ball.velocity.x > 0f)

        { }
            if (ball.position.y > rigidbody.position.y) {
                rigidbody.AddForce(Vector2.up * speed);
            } else if (ball.position.y < rigidbody.position.y) {
                rigidbody.AddForce(Vector2.down * speed);
            }
        }
        else
        {
            
            if (rigidbody.position.y > 0f) {
                rigidbody.AddForce(Vector2.down * speed);
            } else if (rigidbody.position.y < 0f) {
                rigidbody.AddForce(Vector2.up * speed);
            }
        }
    }

}


% Score Code

using UnityEngine;
using UnityEngine.Events;

[RequireComponent(typeof(BoxCollider2D))]
public class ScoringZone : MonoBehaviour
{
    public UnityEvent scoreTrigger;

    private void OnCollisionEnter2D(Collision2D collision)
    {
        Ball ball = collision.gameObject.GetComponent<Ball>();

        if (ball != null) {
            scoreTrigger.Invoke();
        }
    }

}



